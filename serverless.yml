service: github-release

custom:
  account: ${opt:AccountId, '474746818135'}

provider:
  name: aws
  runtime: nodejs12.x
  region: ap-southeast-2
  environment:
    DYNAMODB_TABLE: ${self:service}-${sls:stage}
  httpApi:
    cors: 
      allowedHeaders:
        - Content-Type
        - X-Amz-Date 
        - Authorization
        - X-Api-Key
        - X-Amz-Security-Token
        - X-Amz-User-Agent
        - accept
      allowedMethods:
        - GET
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
          Resource: "arn:aws:dynamodb:${aws:region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"
        - Effect: Allow
          Action:
            - secretsmanager:GetSecretValue
          Resource: "arn:aws:secretsmanager:${aws:region}:*:secret:github-webhook-QxEzVP"

functions:
  webhook:
    handler: releases/webhook.webhook
    events:
      - httpApi:
          path: /releases
          method: post

  list:
    handler: releases/list.list
    events:
      - httpApi:
          path: /releases
          method: get

  get:
    handler: releases/get.get
    events:
      - httpApi:
          path: /releases/{id}
          method: get

plugins:
  - serverless-offline

resources:
  Resources:
    ReleasesDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:provider.environment.DYNAMODB_TABLE}
